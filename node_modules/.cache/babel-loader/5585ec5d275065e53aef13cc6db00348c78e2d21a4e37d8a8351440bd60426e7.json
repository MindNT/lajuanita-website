{"ast":null,"code":"/**\n * Utility functions for handling images\n */\n\n// Base URL for assets - adjust this as needed for your environment\nconst BASE_URL = process.env.REACT_APP_BASE_URL || '';\n\n/**\n * Prepends the base URL to the asset path\n */\nexport const assetUrl = path => {\n  return `${BASE_URL}${path}`;\n};\n\n/**\n * Handles image loading errors by replacing with a fallback\n */\nexport const handleImgError = e => {\n  e.target.src = assetUrl('/images/fallback.png'); // Replace with your fallback image\n  e.target.onerror = null; // Prevents infinite loop if fallback also fails\n};","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_BASE_URL","assetUrl","path","handleImgError","e","target","src","onerror"],"sources":["/home/emmanuel/Documents/lajuanita-website/src/utils/imageHelpers.js"],"sourcesContent":["/**\n * Utility functions for handling images\n */\n\n// Base URL for assets - adjust this as needed for your environment\nconst BASE_URL = process.env.REACT_APP_BASE_URL || '';\n\n/**\n * Prepends the base URL to the asset path\n */\nexport const assetUrl = (path) => {\n  return `${BASE_URL}${path}`;\n};\n\n/**\n * Handles image loading errors by replacing with a fallback\n */\nexport const handleImgError = (e) => {\n  e.target.src = assetUrl('/images/fallback.png'); // Replace with your fallback image\n  e.target.onerror = null; // Prevents infinite loop if fallback also fails\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,EAAE;;AAErD;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC,OAAO,GAAGL,QAAQ,GAAGK,IAAI,EAAE;AAC7B,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAIC,CAAC,IAAK;EACnCA,CAAC,CAACC,MAAM,CAACC,GAAG,GAAGL,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;EACjDG,CAAC,CAACC,MAAM,CAACE,OAAO,GAAG,IAAI,CAAC,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}